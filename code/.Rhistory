getmean <- function () m
getmean([10 12 13])
numeric(c(10, 1, 5))
numeric(10, 1, 5)
getmean(10)
(10,1,2)
[10,1,2]
10,1,2
10 1 2
[10 1 2]
(10 1 2)
makeVector(c(10,11,12))
list(set = set, get = get,
setmean=setmean,
x <<- y
m <<- NULL
source('C:/Users/cwbishop/Dropbox/Coursera/R Programming/ProgAssign2.R')
source('C:/Users/cwbishop/Dropbox/Coursera/R Programming/ProgAssign2.R')
makeVector(c(10,11,12))
c(10,11,12)
mean(c(10,11,12))
makeVector(c(1, 10, 5))
a <- makeVector(c(1, 10, 5))
a
a$getmean
a$getmean()
a$setmean()
source('C:/Users/cwbishop/Dropbox/Coursera/R Programming/ProgAssign2.R')
source('C:/Users/cwbishop/Dropbox/Coursera/R Programming/ProgAssign2.R')
a <- makeVector(c(1, 10, 5))
a$setmean
a$setmean()
source('C:/Users/cwbishop/Dropbox/Coursera/R Programming/ProgAssign2.R')
a$setmean(10)
a$mean
attributes(a)
a$get
a$get()
a$getmean()
mean(c(1,10,5))
a <- makeVector(c(1, 10, 5))
a$get
a$get()
a$getmean()
a$setmean()
a$getmean()
source('C:/Users/cwbishop/Dropbox/Coursera/R Programming/ProgAssign2.R')
a <- makeVector(c(1, 10, 5))
a$getmean
a$getmean()
a(get)
a$get
a$get()
a$getmean()
source('C:/Users/cwbishop/Dropbox/Coursera/R Programming/ProgAssign2.R')
source('C:/Users/cwbishop/Dropbox/Coursera/R Programming/ProgAssign2.R')
source('C:/Users/cwbishop/Dropbox/Coursera/R Programming/ProgAssign2.R')
a <- makeVector(c(1, 10, 5))
a
a$get
a$get()
a$getmean
a$getmean()
a$setmean()
source('C:/Users/cwbishop/Dropbox/Coursera/R Programming/ProgAssign2.R')
x <- cachemean
x
x
x <- cachemean()
x <- cachemean(c(10,11,12))
source('C:/Users/cwbishop/Dropbox/Coursera/R Programming/ProgAssign2.R')
x <- cachemean(a)
x
a
a.getmean()
a$getmean()
y <- cachemean(a)
y
?ggplot2
??ggplot2
install.packages("ggplot2")
?ggplot2
library(ggplot2)
?ggplot2
setClass("eeg_dataset", representation(subject_id = "character"))
getClass("eeg_dataset")
setClass("eeg_dataset", representation(subject_id = "character", continuous_data = "data.frame"))
getSlots("eeg_dataset")
a.temp <- 50
a
a.temp
a.run <- 51
a
a.temp
a
debugSource('~/GitHub/Kaggle/P300 Speller/code/p300_speller.R')
?t
source('~/GitHub/Kaggle/P300 Speller/code/eeg_class.R')
source('~/GitHub/Kaggle/P300 Speller/code/eeg_class.R')
source('~/GitHub/Kaggle/P300 Speller/code/eeg_class.R')
a<- new(eeg_dataset)
a<- new("eeg_dataset")
a
plot_channel(a)
dbquit
source('~/GitHub/Kaggle/P300 Speller/code/eeg_class.R')
source('~/GitHub/Kaggle/P300 Speller/code/eeg_class.R')
a<- new("eeg_dataset")
a@time_stamps
a@time_stamps <- 1:10
a@time_stamps
a@sampling_rate <- 200
a@countinuous_data <- 5:14
source('~/GitHub/Kaggle/P300 Speller/code/eeg_class.R')
a<- new("eeg_dataset")
a@countinuous_data <- 5:14
a@continuous_data <- 5:14
a@sampling_rate <- 200
a@time_stamps
a@time_stamps <- 1:10
debugSource('D:/GitHub/Kaggle/code/p300_speller.R')
data.train <- import_eeg.rdata(subjects.train, erp_label)
data.test <- import_eeg.rdata(subjects.test, erp_label)
erp.train <- make.erp(data.train)
erp.test <- make.erp(data.test)
classify.pcc(data.train, data.test, cross_validate = TRUE)
debugSource('D:/GitHub/Kaggle/code/p300_speller.R')
classify.pcc(data.train, data.test, cross_validate = TRUE)
debugSource('D:/GitHub/Kaggle/code/p300_speller.R')
classify.pcc(data.train, data.test, cross_validate = TRUE)
?classify.pcc
